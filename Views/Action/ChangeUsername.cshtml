@model DatabaseManager.Models.ChangeUsernameSubmission
@{
    ViewBag.Title = "Change Username";
}
<!-- Database Information -->
<h4>1. Database Information</h4>
<hr />
<div class="card bg-light mb-3">
    <div class="card-header">
        <strong>@Model.Database.Name</strong>
    </div>

    <ul class="list-group list-group-flush">
        <li class="list-group-item text-muted">
            <i>Server:</i> <strong>@Model.Database.Host.Hostname</strong><br />
            <i>Type:</i> <strong>@Model.Database.Host.Type @Model.Database.Host.Version</strong><br />
            <i>Created:</i> <strong>@Model.Database.Created</strong>
            <img src="~/Images/@(Model.Database.Host.Developer).png" alt="@Model.Database.Host.Developer" class="float-right" />
</div>

<!-- New Password -->
<h4>2. New Username</h4>
<hr />

<!-- Change Form -->
@using (Html.BeginForm("ChangeUsername", "Action", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="DatabaseName">Old Username</label>
            <input class="form-control" type="text" placeholder="@Model.Database.Username" readonly>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="NewUsername">New Username</label>
            @Html.TextBoxFor(m => m.NewUsername, new { @class = "form-control", @placeholder = "New Username" })
            <small class="text-muted">Usernames must be unique per server.</small><br />
            @Html.ValidationMessageFor(m => m.NewUsername, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <input type="submit" value="Change Username" class="btn btn-primary" />
        <input type="button" value="Cancel" class="btn btn-secondary" onclick="location.href = '/View/Database/@Model.Database.DatabaseID';" />
    </div>
}